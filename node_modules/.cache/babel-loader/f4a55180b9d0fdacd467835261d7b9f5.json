{"ast":null,"code":"var _jsxFileName = \"/Users/Cristina/Desktop/ADALAB/MODULO-3/MOD 3 EJERCICIO FINAL/modulo-3-evaluacion-final-Cris-ti-na/src/components/AppFunctional.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail'; //import CharacterCard from './CharacterCard';\n\nimport getApiData from '../services/api';\nimport logo from '../images/rmlogo.png';\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState(''); //const [filterSpecie, setFilterSpecie] = useState('');\n\n  useEffect(() => {\n    getApiData().then(data => {\n      setCharacters(data);\n    });\n  }, []);\n\n  const handleFilters = data => {\n    console.log(data);\n\n    if (data.key === 'filterName') {\n      setFilterName(data.value);\n    } else if (data.key === 'filterSpecie') {\n      setFilterSpecie(data.value);\n    }\n  };\n\n  const renderCharacterDetail = props => {\n    //const character = characters[0];\n    const routeCharacterName = props.match.params.characterName;\n    const character = characters.find(character => character.name === routeCharacterName);\n    console.log(character);\n\n    if (character) {\n      return /*#__PURE__*/React.createElement(CharacterDetail, {\n        key: character.id,\n        imageUrl: character.image,\n        name: character.name,\n        specie: character.species,\n        origin: character.origin.name,\n        episode: character.episode,\n        status: character.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }\n      }, \"Character not found\");\n    }\n  };\n\n  const renderFilteredCharacters = () => {\n    return characters.filter(character => {\n      return character.name.includes(filterName);\n    });\n  }; //render() {\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header__logo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"header__logo\",\n    alt: \"Rick and Morty logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title--big\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Rick and Morty\"), /*#__PURE__*/React.createElement(Filters, {\n    filterName: filterName,\n    handleFilters: handleFilters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CharacterList, {\n    characters: renderFilteredCharacters(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/details/:characterName\",\n    render: renderCharacterDetail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })))); //}\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Cristina/Desktop/ADALAB/MODULO-3/MOD 3 EJERCICIO FINAL/modulo-3-evaluacion-final-Cris-ti-na/src/components/AppFunctional.js"],"names":["React","useEffect","useState","Route","Switch","Filters","CharacterList","CharacterDetail","getApiData","logo","App","characters","setCharacters","filterName","setFilterName","then","data","handleFilters","console","log","key","value","setFilterSpecie","renderCharacterDetail","props","routeCharacterName","match","params","characterName","character","find","name","id","image","species","origin","episode","status","renderFilteredCharacters","filter","includes"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Route, Switch} from 'react-router-dom';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\n//import CharacterCard from './CharacterCard';\nimport getApiData from '../services/api';\nimport logo from '../images/rmlogo.png';\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  //const [filterSpecie, setFilterSpecie] = useState('');\n\n  useEffect(() => {\n      getApiData().then(data => {\n        setCharacters(data);\n      });\n  }, []);\n\n  const handleFilters = (data) => {\n    console.log(data);\n    if (data.key === 'filterName') {\n      setFilterName(data.value);\n    } else if (data.key === 'filterSpecie') {\n      setFilterSpecie(data.value);\n    }\n\n  }\n\n  const renderCharacterDetail = (props) => {\n    //const character = characters[0];\n    const routeCharacterName = props.match.params.characterName;\n    const character = characters.find(character =>\n      character.name === routeCharacterName);\n    console.log(character);\n    if (character) {\n      return (\n        <CharacterDetail\n          key={character.id}\n          imageUrl={character.image}\n          name={character.name}\n          specie={character.species}\n          origin={character.origin.name}\n          episode={character.episode}\n          status={character.status}\n        />\n      );\n    } else {\n      return <p>Character not found</p>;\n    }\n  };\n\n  const renderFilteredCharacters = () => {\n    return characters.filter(character => {\n      return character.name.includes(filterName);\n    });\n  }\n\n  //render() {\n    return (\n      <div>\n\n        <header>\n          <div className=\"header__logo-container\">\n            <img src={logo} className=\"header__logo\" alt='Rick and Morty logo' />\n          </div>\n        </header>\n\n        <main className=\"App\">\n          <h1 className=\"title--big\">Rick and Morty</h1>\n          <Filters filterName={filterName} handleFilters={handleFilters} />\n          <CharacterList characters={renderFilteredCharacters()} />\n          <Switch>\n            <Route path=\"/details/:characterName\" render={renderCharacterDetail} />\n          </Switch>\n        </main>\n\n      </div>\n    );\n  //}\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}