{"ast":null,"code":"var _jsxFileName = \"/Users/Cristina/Desktop/ADALAB/MODULO-3/MOD 3 EJERCICIO FINAL/modulo-3-evaluacion-final-Cris-ti-na/src/components/AppFunctional.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport getApiData from '../services/api';\nimport logo from '../images/rmlogo.png';\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterSpecie, setFilterSpecie] = useState('');\n  useEffect(() => {\n    getApiData().then(data => {\n      setCharacters(data);\n    });\n  }, []); //LOLCALSTORAGE\n\n  useEffect(() => {\n    localStorage.setItem('filterName', JSON.stringify(filterName));\n  }, [filterName]);\n  useEffect(() => {\n    const newFilter = JSON.parse(localStorage.getItem('filterName'));\n\n    if (newFilter) {\n      setFilterName(newFilter);\n    }\n  }, []); //ORDER\n\n  const sortedCharacters = () => {\n    characters.sort((a, b) => a.name > b.name ? 1 : -1);\n  };\n\n  const handleFilters = data => {\n    //console.log(data);\n    if (data.key === 'filterName') {\n      setFilterName(data.value);\n    } else if (data.key === 'filterSpecie') {\n      setFilterSpecie(data.value);\n    }\n  };\n\n  const renderCharacterDetail = props => {\n    if (props.match.params) {\n      const character = characters.find(character => {\n        const routeCharacterName = props.match.params.characterName;\n        const name = character.name.toLowerCase().replace(' ', '');\n        return name.includes(routeCharacterName);\n      }); //character.name === routeCharacterName);\n      //const character = characters[0];\n      //console.log(character);\n\n      if (character) {\n        return /*#__PURE__*/React.createElement(CharacterDetail, {\n          key: character.id,\n          imageUrl: character.image,\n          name: character.name,\n          specie: character.species,\n          origin: character.origin.name,\n          episode: character.episode,\n          status: character.status,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }\n        }, errorInfo);\n      }\n    }\n\n    ;\n\n    const renderFilteredCharacters = () => {\n      sortedCharacters();\n      return characters.filter(character => {\n        const name = character.name.toLowerCase();\n        return name.includes(filterName);\n      }).filter(character => {\n        return character.species.includes(filterSpecie);\n      });\n    }; //ERROR\n\n\n    const errorInfo = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"errorText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, \"Character not found with \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorText_word\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 34\n      }\n    }, \"\\\"\", filterName, \"\\\"\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    })); //render() {\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header__logo-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"header__logo\",\n      alt: \"Rick and Morty logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"main\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"title--big\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, \"Rick and Morty\"), /*#__PURE__*/React.createElement(Filters, {\n      filterName: filterName,\n      filterSpecie: filterSpecie,\n      handleFilters: handleFilters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CharacterList, {\n      characters: renderFilteredCharacters(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/details/:characterName\",\n      render: renderCharacterDetail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    })))); //}\n  };\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Cristina/Desktop/ADALAB/MODULO-3/MOD 3 EJERCICIO FINAL/modulo-3-evaluacion-final-Cris-ti-na/src/components/AppFunctional.js"],"names":["React","useEffect","useState","Route","Switch","Filters","CharacterList","CharacterDetail","getApiData","logo","App","characters","setCharacters","filterName","setFilterName","filterSpecie","setFilterSpecie","then","data","localStorage","setItem","JSON","stringify","newFilter","parse","getItem","sortedCharacters","sort","a","b","name","handleFilters","key","value","renderCharacterDetail","props","match","params","character","find","routeCharacterName","characterName","toLowerCase","replace","includes","id","image","species","origin","episode","status","errorInfo","renderFilteredCharacters","filter"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Route, Switch} from 'react-router-dom';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport getApiData from '../services/api';\nimport logo from '../images/rmlogo.png';\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterSpecie, setFilterSpecie] = useState('');\n\n  useEffect(() => {\n      getApiData().then(data => {\n        setCharacters(data);\n      });\n  }, []);\n\n  //LOLCALSTORAGE\n  useEffect(() => {\n    localStorage.setItem('filterName', JSON.stringify(filterName));\n  }, [filterName]);\n\n  useEffect(() => {\n    const newFilter = JSON.parse(localStorage.getItem('filterName'));\n    if (newFilter) {\n      setFilterName(newFilter)\n    }\n  }, []);\n\n  //ORDER\n  const sortedCharacters = () => {\n    characters.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n\n  const handleFilters = (data) => {\n    //console.log(data);\n    if (data.key === 'filterName') {\n      setFilterName(data.value);\n    } else if (data.key === 'filterSpecie') {\n      setFilterSpecie(data.value);\n    }\n  };\n\n  const renderCharacterDetail = (props) => {\n    if(props.match.params) {\n      const character = characters.find(character => {\n        const routeCharacterName = props.match.params.characterName;\n        const name = character.name.toLowerCase().replace(' ', '');\n        return name.includes(routeCharacterName);\n      }\n    )\n\n      //character.name === routeCharacterName);\n      //const character = characters[0];\n      //console.log(character);\n\n    if(character) {\n      return (\n        <CharacterDetail\n          key={character.id}\n          imageUrl={character.image}\n          name={character.name}\n          specie={character.species}\n          origin={character.origin.name}\n          episode={character.episode}\n          status={character.status}\n        />\n      );\n    } else {\n      return (\n        <div>\n          {errorInfo}\n        </div>\n      );\n    }\n  };\n\n  const renderFilteredCharacters = () => {\n    sortedCharacters();\n    return characters\n      .filter(character => {\n        const name = character.name.toLowerCase();\n        return name.includes(filterName);\n      })\n      .filter(character => {\n        return character.species.includes(filterSpecie);\n      });\n  }\n\n  //ERROR\n  const errorInfo = (\n    <div>\n      <h4 className=\"errorText\">\n        Character not found with <span className=\"errorText_word\">\"{filterName}\"</span>\n      </h4>\n      <div></div>\n    </div>\n  )\n\n  //render() {\n    return (\n      <div>\n\n        <header>\n          <div className=\"header__logo-container\">\n            <img src={logo} className=\"header__logo\" alt='Rick and Morty logo' />\n          </div>\n        </header>\n\n        <main className=\"App\">\n          <h1 className=\"title--big\">Rick and Morty</h1>\n          <Filters\n            filterName={filterName}\n            filterSpecie={filterSpecie}\n            handleFilters={handleFilters}\n          />\n          <CharacterList characters={renderFilteredCharacters()} />\n          <Switch>\n            <Route path=\"/details/:characterName\" render={renderCharacterDetail} />\n          </Switch>\n        </main>\n\n      </div>\n    );\n  //}\n};\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}