{"ast":null,"code":"var _jsxFileName = \"/Users/Cristina/Desktop/ADALAB/MODULO-3/MOD 3 EJERCICIO FINAL/modulo-3-evaluacion-final-Cris-ti-na/src/components/AppFunctional.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport getApiData from '../services/api';\nimport logo from '../images/rmlogo.png';\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterSpecie, setFilterSpecie] = useState('');\n  useEffect(() => {\n    getApiData().then(data => {\n      setCharacters(data);\n    });\n  }, []); //LOLCALSTORAGE\n\n  useEffect(() => {\n    localStorage.setItem('filterName', JSON.stringify(filterName));\n  }, [filterName]);\n  useEffect(() => {\n    const newFilter = JSON.parse(localStorage.getItem('filterName'));\n\n    if (newFilter) {\n      setFilterName(newFilter);\n    }\n  }, []); //ORDER\n\n  const sortedCharacters = () => {\n    characters.sort((a, b) => a.name > b.name ? 1 : -1);\n  };\n\n  const handleFilters = data => {\n    //console.log(data);\n    if (data.key === 'filterName') {\n      setFilterName(data.value);\n    } else if (data.key === 'filterSpecie') {\n      setFilterSpecie(data.value);\n    }\n  };\n\n  const renderCharacterDetail = props => {\n    //const character = characters[0];\n    const routeCharacterName = props.match.params.characterName;\n    const character = characters.find(character => character.name === routeCharacterName); //console.log(character);\n\n    if (character) {\n      return /*#__PURE__*/React.createElement(CharacterDetail, {\n        key: character.id,\n        imageUrl: character.image,\n        name: character.name,\n        specie: character.species,\n        origin: character.origin.name,\n        episode: character.episode,\n        status: character.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 14\n        }\n      }, \"Character not found\");\n    }\n  };\n\n  const renderFilteredCharacters = () => {\n    sortedCharacters();\n    return characters.filter(character => {\n      const name = character.name.toLowerCase();\n      return name.includes(filterName);\n    }).filter(character => {\n      return character.species.includes(filterSpecie);\n    });\n  }; //render() {\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header__logo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"header__logo\",\n    alt: \"Rick and Morty logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title--big\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Rick and Morty\"), /*#__PURE__*/React.createElement(Filters, {\n    filterName: filterName,\n    filterSpecie: filterSpecie,\n    handleFilters: handleFilters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CharacterList, {\n    characters: renderFilteredCharacters(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/details/:characterName\",\n    render: renderCharacterDetail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })))); //}\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Cristina/Desktop/ADALAB/MODULO-3/MOD 3 EJERCICIO FINAL/modulo-3-evaluacion-final-Cris-ti-na/src/components/AppFunctional.js"],"names":["React","useEffect","useState","Route","Switch","Filters","CharacterList","CharacterDetail","getApiData","logo","App","characters","setCharacters","filterName","setFilterName","filterSpecie","setFilterSpecie","then","data","localStorage","setItem","JSON","stringify","newFilter","parse","getItem","sortedCharacters","sort","a","b","name","handleFilters","key","value","renderCharacterDetail","props","routeCharacterName","match","params","characterName","character","find","id","image","species","origin","episode","status","renderFilteredCharacters","filter","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Route, Switch} from 'react-router-dom';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport getApiData from '../services/api';\nimport logo from '../images/rmlogo.png';\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterSpecie, setFilterSpecie] = useState('');\n\n  useEffect(() => {\n      getApiData().then(data => {\n        setCharacters(data);\n      });\n  }, []);\n\n  //LOLCALSTORAGE\n  useEffect(() => {\n    localStorage.setItem('filterName', JSON.stringify(filterName));\n  }, [filterName]);\n\n  useEffect(() => {\n    const newFilter = JSON.parse(localStorage.getItem('filterName'));\n    if (newFilter) {\n      setFilterName(newFilter)\n    }\n  }, []);\n\n  //ORDER\n  const sortedCharacters = () => {\n    characters.sort((a, b) => (a.name > b.name) ? 1 : -1);\n  }\n\n  const handleFilters = (data) => {\n    //console.log(data);\n    if (data.key === 'filterName') {\n      setFilterName(data.value);\n    } else if (data.key === 'filterSpecie') {\n      setFilterSpecie(data.value);\n    }\n  };\n\n  const renderCharacterDetail = (props) => {\n    //const character = characters[0];\n    const routeCharacterName = props.match.params.characterName;\n    const character = characters.find(character =>\n      character.name === routeCharacterName);\n    //console.log(character);\n    if (character) {\n      return (\n        <CharacterDetail\n          key={character.id}\n          imageUrl={character.image}\n          name={character.name}\n          specie={character.species}\n          origin={character.origin.name}\n          episode={character.episode}\n          status={character.status}\n        />\n      );\n    } else {\n      return <p>Character not found</p>;\n    }\n  };\n\n  const renderFilteredCharacters = () => {\n    sortedCharacters();\n    return characters\n      .filter(character => {\n        const name = character.name.toLowerCase();\n        return name.includes(filterName);\n      })\n      .filter(character => {\n        return character.species.includes(filterSpecie);\n      });\n  }\n\n  //render() {\n    return (\n      <div>\n\n        <header>\n          <div className=\"header__logo-container\">\n            <img src={logo} className=\"header__logo\" alt='Rick and Morty logo' />\n          </div>\n        </header>\n\n        <main className=\"App\">\n          <h1 className=\"title--big\">Rick and Morty</h1>\n          <Filters\n            filterName={filterName}\n            filterSpecie={filterSpecie}\n            handleFilters={handleFilters}\n          />\n          <CharacterList characters={renderFilteredCharacters()} />\n          <Switch>\n            <Route path=\"/details/:characterName\" render={renderCharacterDetail} />\n          </Switch>\n        </main>\n\n      </div>\n    );\n  //}\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}